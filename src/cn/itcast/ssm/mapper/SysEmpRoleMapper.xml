<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.itcast.ssm.mapper.SysEmpRoleMapper">
  <resultMap id="BaseResultMap" type="cn.itcast.ssm.po.SysEmpRole">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="emp_id" jdbcType="VARCHAR" property="empId" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, emp_id, role_id
  </sql>
  <select id="selectByExample" parameterType="cn.itcast.ssm.po.SysEmpRoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_emp_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_emp_role
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sys_emp_role
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.itcast.ssm.po.SysEmpRoleExample">
    delete from sys_emp_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.itcast.ssm.po.SysEmpRole">
    insert into sys_emp_role (id, emp_id, role_id
      )
    values (#{id,jdbcType=VARCHAR}, #{empId,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.itcast.ssm.po.SysEmpRole">
    insert into sys_emp_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="empId != null">
        emp_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="empId != null">
        #{empId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.itcast.ssm.po.SysEmpRoleExample" resultType="java.lang.Long">
    select count(*) from sys_emp_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_emp_role
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.empId != null">
        emp_id = #{record.empId,jdbcType=VARCHAR},
      </if>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_emp_role
    set id = #{record.id,jdbcType=VARCHAR},
      emp_id = #{record.empId,jdbcType=VARCHAR},
      role_id = #{record.roleId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.itcast.ssm.po.SysEmpRole">
    update sys_emp_role
    <set>
      <if test="empId != null">
        emp_id = #{empId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.itcast.ssm.po.SysEmpRole">
    update sys_emp_role
    set emp_id = #{empId,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <select id="findEmpnamesByRname"	parameterType="java.lang.Integer"  resultMap="SysEmpMap">  
		select *
		from sys_emp_role 
		left join sys_role on sys_emp_role.role_id=sys_role.role_id
		left join sys_emp on sys_emp_role.emp_id=sys_emp.emp_id 
		where 1=1
		<if test="params.rname!=null">and role_name=#{params.rname}</if> 
		<if test="params.empName!=null">and name like #{params.name}</if>   <!-- 入参为hashmap传递多个参数时，一定要使用param,尤其注意if判断中，也要使用 -->
		<if test="params.empPwd!=null">and pwd=#{params.pwd}</if>
	</select>   														   <!-- if test 中不用预编译#{} -->
	<resultMap  id="SysEmpMap" type="SysEmp">
		<result column="name" property="name"/>
		<result column="gender" property="gender"/>
		<result column="phone" property="phone"/>
		<result column="pwd" property="pwd"/>
		<result column="tid" property="tid"/>
	</resultMap>
  
</mapper>